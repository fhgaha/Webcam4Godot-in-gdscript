<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANgBAADYAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6KHwDgiyAK3IgeNtmGHn7XhR2214Ud6daE
        HfvVgx3/1YMd/9aEHfvXhR3p14UdttmGHX3dhx414IogCt6JHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6KHwDhjCAH2oceRdiFHqXWhB3l1YMd/NSD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1YMd/NaEHeXYhR6k2ogeReKNIAjeix8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOWOIAD//24A3IkeJNiGHpTVhB3t1IMd/9SD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/VhB3u2IYemN6J
        HiT/vDYA540gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgjh4A/7YgAduHHUXWhR3L1IMd/tSD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SD
        Hf/Ugx3+1oQdy9uIHkX7thgB344dAAAAAAAAAAAAAAAAAAAAAAAAAAAA4IgfAP+VKwDahx5P1oUd4dSD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1oQd4dmHHlH/mikA34kfAAAAAAAAAAAAAAAAAOaPIQDLfBkA3IgeRdaE
        HeDUgx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1oQd4dyHHkTLfx4A5oweAAAAAAAAAAAA24geAN6J
        HyXXhR3K1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SD
        Hf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/14Qdy92IHSXbhx0AAAAAAN6K
        HgDkjh4H2IYemNSDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMc/9SDHP/Ugxz/1IMc/9SDHP/Ugxz/1IMc/9SD
        HP/Ugxz/1IMc/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/2IYdluKM
        HwbdiR4A2YUdANuGHkfVhB3u1IMd/9SDHf/Ugx3/1IIb/9WDHf/VhiP/1Yck/9WHJP/VhyT/1Yck/9WH
        JP/VhyT/1Yck/9WHJP/VhyT/1YYh/9SCG//Ughz/1IMd/9SDHf/Ugx3/1IMd/9SDHf/Ugx3/1IMd/9SD
        Hf/VhB3t2oceRdmGHQDjjB0K2IUdpdSDHf/Ugx3/1IMd/9SDHP/XlUP/2bKC/9u+mf/bv5v/27+b/9u/
        m//bv5v/27+b/9u/m//bv5v/27+b/9u/m//avJX/2Kpx/9WMLv/Ugxz/1IMd/9SDHP/UgRr/1IEa/9SD
        HP/Ugx3/1IMd/9SDHf/YhR2l444gCdyHHzfWhB3l1IMd/9SDHf/Ughv/15VD/9vNvP/a3N3/2tvd/9rb
        3f/a293/2tvd/9rb3f/a293/2tvd/9rb3f/a293/2tvd/9rb3f/b29v/2r2Y/9WIJv/Ughr/1o0x/9io
        bP/YqGv/1Yos/9SCHP/Ugx3/1IMd/9aEHeXchx822YYef9WDHf3Ugx3/1IMd/9SDHf/Zs4L/2tzd/9ra
        2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2//b19H/2aFb/9if
        V//byLD/2trZ/9vb2v/Zrnj/1IMd/9SDHf/Ugx3/1YMd/dmGHn7XhR231IMd/9SDHf/Ugxz/1YYj/9u9
        mf/a293/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra
        2f/czr7/29XO/9rb3P/a2tr/2tvd/9u+mv/VhiP/1IMc/9SDHf/Ugx3/14UdtteFHenUgx3/1IMd/9SD
        HP/VhyT/27+b/9rb3f/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra
        2v/a2tr/2tra/9rb2//a29v/2tra/9ra2v/a293/27+b/9WHJP/Ugxz/1IMd/9SDHf/XhR3p1oQd+9SD
        Hf/Ugx3/1IMc/9WHJP/bv5v/2tvd/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra
        2v/a2tr/2tra/9ra2v/a2tr/2tra/9ra2v/a2tr/2tra/9rb3f/bv5v/1Yck/9SDHP/Ugx3/1IMd/9aE
        HfvYhR3/14Ud/9eFHf/XhRz/2Igk/97BnP/d3uD/3d3d/93d3f/d3d3/3d3d/93d3f/d3d3/3d3d/93d
        3f/d3d3/3d3d/93d3f/d3d3/3d3d/93d3f/d3d3/3d3d/93d3f/d3d3/3d7g/97BnP/YiCT/14Uc/9eF
        Hf/XhR3/2IUd//CUIfrwlCH/8JQh//CUIP/wlib/9NOo//f4+v/39/f/9/f3//f39//39/f/9/f3//f3
        9//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//f39//3+Pr/9NOo//CW
        Jv/wlCD/8JQh//CUIf/wlCH585Yh7POWIf/zliH/85Yg//OYJv/31ar/+vz9//r6+v/6+vr/+vr6//r6
        +v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r8
        /f/31ar/85gm//OWIP/zliH/85Yh//OWIevzliHQ85Yh//OWIf/zliD/85gm//fVqv/6/P3/+vr6//r6
        +v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+/z/+vv7//r6
        +v/6+vr/+vz9//fVqv/zmCb/85Yg//OWIf/zliH/85YhzvOWIaXzliH/85Yh//OWIP/zmCb/99Wo//r8
        /f/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vj2//nl
        zf/58ef/+vv8//r6+//6/P7/99Wp//OYJv/zliD/85Yh//OWIf/zliGk85Yha/OWIffzliH/85Yh//OW
        IP/3yY//+vv9//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r7
        /P/58+v/9bFc//WxW//438D/+vj1//r39P/2woL/85Yg//OWIf/zliH/85Yh9/OWIWrzlyEq85Yh2vOW
        If/zliH/85Uf//SnR//55c7/+vv8//r8/f/6/P3/+vz9//r8/f/6/P3/+vz9//r8/f/6/P3/+vz9//r8
        /f/6/P7/+vn3//fSo//zmir/85Qe//SeNP/1u3H/9bpw//ScL//zliD/85Yh//OWIf/zliHa85YhKfOU
        IQXzliGT85Yh//OWIf/zliH/85Yg//SoR//3yY//99Sp//fVqv/31ar/99Wq//fVqv/31ar/99Wq//fV
        qv/31ar/99Wq//fTpf/2v3r/9J4y//OWIP/zliH/85Yg//OUHv/zlB7/85Yg//OWIf/zliH/85Yh//OW
        IZLzliEF85YhAPOVITjzliHl85Yh//OWIf/zliH/85Uf//OWIP/zmCX/85gm//OYJv/zmCb/85gm//OY
        Jv/zmCb/85gm//OYJv/zmCb/85ck//OVH//zlSD/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliHk85YhN/OWIQDylyEA8ZghBPOWIYbzliH985Yh//OWIf/zliH/85Yh//OWIP/zliD/85Yg//OW
        IP/zliD/85Yg//OWIP/zliD/85Yg//OWIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh/fOWIYT1liED9JYhAAAAAADzliEA85YhHPOWIbzzliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliG785YhG/OWIQAAAAAAAAAAAPOUIQDylyEA8pYhNvOWIdLzliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh0/SWIDb1lSIA8ZgdAAAAAAAAAAAAAAAAAPaYJADlihAA9JYhQfOW
        IdLzliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIdPzliFB6rAHAPSTJAAAAAAAAAAAAAAAAAAAAAAAAAAAAPWX
        HwC4flEA85YhNvOWIbzzliH885Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIfzzliG985YgNv9GLQDymSAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPGWHwD0lyQA8pchG/OWIYXzliHl85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf7zliHl85Yhh/KWIBvykyAA85ghAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzlSAA85UgBfOVITjzliGT85Yh2/OWIfjzliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIffzliHa85Yhk/OWIDfylSEF8pUhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9JYiAPSWIwbzlyEq85Yha/OW
        IaXzliHQ85Yh7POWIfrzliH685Yh7POWIc/zliGl85Yha/OVICn0lSIG9JUhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/8AAAD/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>